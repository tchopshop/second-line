<?php
function revision_ownership_menu() {
  $menu = array();
  $menu['admin/revision-ownership/settings'] = array(
    'title' => 'Revision Ownership Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('revision_ownership_settings'),
    'access arguments' => array('administer revision ownership'),
    'type' => MENU_CALLBACK,
  );
  return $menu;
}

function revision_ownership_permission() {
  return array(
	  'administer revision ownership' => array(
		  'title' => t('Revision Ownership'),
			'description' => t('Configure revision ownership.'),
		),
	);
}

function revision_ownership_settings() {
  $form = array();
  $content_types = node_type_get_types();
  foreach ($content_types as $type => $settings) {
    $form['revision_ownership_' . $type] = array(
      '#type' => 'checkbox',
      '#default_value' => variable_get('revision_ownership_' . $type, 0),
      '#title' => $settings->name,
      '#description' => t('Preserve original author ownership on revisions for all ":name" nodes?', array(':name' => $settings->name)),
    );
  }
  return system_settings_form($form);
}

function revision_ownership_node_update($node) {
  if (variable_get('revision_ownership_' . $node->type, 0) === 1) {
    $original_revision = node_load($node->nid, 0, TRUE);
    db_update('node_revision')
      ->fields(array('uid' => $original_revision->uid))
      ->condition('node_revision.nid', $node->nid)
      ->execute();
  }
}